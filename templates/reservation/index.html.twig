{% extends 'base.html.twig' %}

{% block title %}RDV{% endblock %}
{% block head %}
  <meta name="description" content="Planifiez facilement vos rendez-vous avec notre calendrier en ligne convivial. Gérez votre emploi du temps, réservez des créneaux horaires et gardez une trace de vos événements importants. Simplifiez la gestion de votre emploi du temps avec notre calendrier intuitif." />
{% endblock %}
{% block body %}


<div id="calendrier">
{# {{dump(data)}} #}

</div>
        <a href="{{ path('app_reservation_new') }}">Réserver</a>


{% endblock %}

{% block javascripts %}
<script>
    window.onload = () => {
        
        let calendarElt = document.querySelector("#calendrier")
        let events = {{ data|raw }}
         // Convert the array of objects to an array of events
 
        events = events.map((rdv) => {

            return {
                title: "Crenaux réservé",
                color: 'gray',
                textColor: '#fcfcfc',
                start: rdv.rdv,
                
            };
        });

            // Obtenez la date actuelle
        var currentDate = new Date();

        // Filtrez les événements passés
        events = events.filter((event) => {
            return new Date(event.start) >= currentDate;
        });

        let calendar = new FullCalendar.Calendar(calendarElt, {
            initialView: 'timeGridWeek',
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar:{
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth, timeGridWeek',
            },
            allDaySlot: false, //retire allday
            slotMinTime: "08:00:00",//heure debut calendar
            slotMaxTime: "18:00:00",//heure fin calendar
            expandRows: true,//Laisse juste les cases entre 8 et 18h
            events: events,
            firstDay: 1, // commence par lundi
            dayCellDidMount: function (info) {
                const cellDate = info.date;
                const dayOfWeek = cellDate.getDay(); // Récupère le jour de la semaine (0 = dimanche, 1 = lundi, ..., 6 = samedi)

                // Vérifiez si c'est un dimanche (0) ou un lundi (1)
                if (dayOfWeek === 0 || dayOfWeek === 1) {
                    // Changez la couleur de fond des cellules du dimanche et du lundi
                     info.el.style.backgroundColor = ' #943746';
                }else{
                     info.el.style.backgroundColor = ' #fcfcfc';
                     }
    }
}); 
 

        calendar.render()

    }
</script>
        


{% endblock %}



